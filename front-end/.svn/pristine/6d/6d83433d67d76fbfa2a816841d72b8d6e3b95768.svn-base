// pages/qyzc/qyzc.js
var QQMapWX = require('../../mapjs/qqmap-wx-jssdk.js');
// 加载工具类
const CONSTANT = require('../../common/constant');
const Loading = require('../../utils/loading_util');
const object_util = require('../../utils/object_util');
const string_util = require('../../utils/string_util');
const sort_util = require('../../utils/sort_util');

// 加载服务
const jobCategoryService = require('../../common/jobCategoryService');
const candidateForCategoryService = require('../../common/candidateForCategoryService');
const candidateForCommunityService = require('../../common/candidateForCommunityService');
const companyForCategoryService = require('../../common/companyForCategoryService');
const recruitCompanyService = require('../../common/recruitCompanyService');
const communityInformationService = require('../../common/communityInformationService');
const userCandidateService = require('../../common/userCandidateService');
const userRecruiterService = require('../../common/userRecruiterService');
const recruitJobService = require('../../common/recruitJobService');

// 常量定义
const app = getApp();
const PAGENAME = 'qyzc.js - ';
Page({

    /**
     * 页面的初始数据
     */
    data: {
        // 招聘人
        sqrphone: '',
        recruiterOpenid: '',
        // 企业名称
        companyUuid: '',
        companyName: '',
        companyAddress: '',
        longitude: 0.0,
        latitude: 0.0,
        // 分类选择
        array: ['IT', '文化传媒', '电子制造'], // categoryName
        categoryUuid_list: [],
        categoryUuid: '',
        index: 0,
        // 社区选择
        array1: ['社区1', '街道1', '街道2'], // communityName
        communityUuidList: [],
        communityUuid: '',
        index1: 0,
        positionData: '',
        yxz: 0,
        licenseId: '',
        wantjob: [
            // { job: 'IT', id: 0 }, { job: '文化传媒', id: 1 }, { job: '电子制造', id: 2 }, { job: '电子制造', id: 3 }, { job: '电子制造', id: 4 }
        ],
        datdid: '',
        gslxr: '',
        tagjob: [{ job: 'IT', id: 0 }, { job: '文化传媒', id: 1 }, { job: '电子制造', id: 2 }, { job: '电子制造', id: 3 }, { job: '电子制造', id: 4 }],



        districtList: [
            // { districtName: '芙蓉区', checked: false },
        ],
        streetList: [
            // { streetName: '望岳街道', checked: false },
        ],
        communityList: [
            // { communityName: '社区er', typeid: 1 },
            // { communityName: '社区3', typeid: 2 },
            // { communityName: '社区一', typeid: 3 },
        ],
        // 已选社区
        hiddenPopupExpectCommunity: true,
        hiddenCommunityDefaultText: false,
        choosedCommunityList: [],
        choosedCommunityListCopy: [],
        choosedCommunityUuid: '',
        choosedCommunityName: '请选择社区',
        choosedDistrictName: '',
    },
    // 弹窗 - 求职区域呼出
    bindtapPopupExpectCommunity(e) {
        // 建立副本
        this.setData({
            choosedCommunityListCopy: object_util.copyObject(this.data.choosedCommunityList),
            hiddenPopupExpectCommunity: false,
        })
    },
    //点击遮罩层关闭弹窗
    bindtapCommunityMask() {
        this.setData({
            choosedCommunityList: object_util.copyObject(this.data.choosedCommunityListCopy),
            hiddenPopupExpectCommunity: true,
        })
    },
    // 期望求职区域--区选择
    bindtapChooseDistrict: async function (e) {
        // 获取item项的id，和数组的下标值
        let currentDistrictName = e.target.dataset.name;
        let currentDistrictList = this.data.districtList;
        this.setData({
            districtList: currentDistrictList.map(v => {
                v.checked = (v.districtName == currentDistrictName) ? true : false
                return v;
            })
        })
        // 先清空
        this.setData({
            streetList: [],
            communityList: [],
        })
        // 后加载对应的街道
        await this._loadStreetList(currentDistrictName);

    },

    // 期望求职区域--街道选择
    bindtapChooseStreet: async function (e) {
        let currentStreetName = e.target.dataset.name;
        let currentStreetList = this.data.streetList;
        this.setData({
            streetList: currentStreetList.map(v => {
                v.checked = (currentStreetName == v.streetName) ? true : false
                return v;
            }),
        });
        await this._loadCommunityList(currentStreetName);

    },

    // 期望求职区域--社区选择
    bindtapChooseCommunity(e) {
        let currentCommunityUuid = e.target.dataset.id;
        let currentCommunityList = this.data.communityList;
        let currentChoosedCommunityList = object_util.copyObject(this.data.choosedCommunityList);

        currentCommunity = currentCommunityList.find(v => {
            return currentCommunityUuid === v.communityUuid;
        });
        if (currentCommunity.checked == false) {
            if (currentChoosedCommunityList.length >= 3) {
                wx.showModal({
                    title: '选择期望社区不得超过3个',
                })
                return;
            } else {
                currentChoosedCommunityList.push({
                    communityUuid: currentCommunity.communityUuid,
                    communityName: currentCommunity.communityName,
                }),
                    this.setData({
                        choosedCommunityList: currentChoosedCommunityList
                    })
            }
        } else {
            // 去除
            this.setData({
                choosedCommunityList: object_util.copyObject(
                    currentChoosedCommunityList.filter(v => {
                        return v.communityUuid != currentCommunity.communityUuid;
                    })
                ),
            })
        }
        this.setData({
            communityList: currentCommunityList.map(v => {
                if (currentCommunityUuid == v.communityUuid) {
                    v.checked = !v.checked;
                }
                return v;
            }),
        })
    },
    //点击去掉已选择社区
    bindtapCancelChoosedCommunity(e) {
        console.log(e);
        let currentCommunityUuid = e.currentTarget.dataset.id;
        let currentChoosedCommunity = this.data.choosedCommunityList;
        this.setData({
            choosedCommunityList: currentChoosedCommunity.filter(v => {
                return !(v.communityUuid == currentCommunityUuid);
            })
        })
    },

    // 加载街道函数
    async _loadStreetList(districtName) {
        let streetList = await communityInformationService.listStreetNameByDistrictName(districtName);
        streetList = streetList.data;
        this.setData({
            streetList: streetList.map(v => {
                return {
                    streetName: v,
                    checked: false,
                }
            }),
        })
    },
    // 加载社区函数
    async _loadCommunityList(streetName) {
        let communityList = await communityInformationService.listByStreetName(streetName);
        let choosedCommunityList = this.data.choosedCommunityList;
        communityList = communityList.data;
        console.log(communityList);
        communityList = communityList.map(v => {
            if (choosedCommunityList.findIndex(r => {
                return r.communityUuid === v.id;
            }) == -1) {
                v.checked = false;
            } else {
                v.checked = true;
            }
            return {
                communityUuid: v.id,
                communityName: v.communityName,
                streetName: v.streetName,
                districtName: v.districtName,
                checked: v.checked,
            };
        });
        console.log(communityList);
        this.setData({
            communityList: communityList
        });
    },

    // 企业名字
    bindinputCompanyName(e) {
        this.setData({
            companyName: e.detail.value
        })
    },
    lxrname(e) {
        this.setData({
            gslxr: e.detail.value
        })
    },
    // 行业分类选择
    bindPickerChange(e) {
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.setData({
            index: e.detail.value,
            categoryUuid: this.data.categoryUuid_list[e.detail.value],
        })
    },
    setPhone(openid, phone) {
        var that = this;
        wx.request({
            url: app.globalData.web_path + '/gywm/setWxuserandCompPhone',
            data: {
                openid: openid,
                phone: phone,
            },
            header: app.globalData.header,
            success: function (res) {
                console.log(res)
                // that._init();
                // that.openAlert(scene);
            },
            fail: function (res) {
            }
        })
    },
    getPhoneNumber(e) {
        let that = this
        var sessionKey = wx.getStorageSync('sessionKey')
        var openid = wx.getStorageSync('openid')
        console.log(openid)
        console.log(e)
        console.log(sessionKey)
        wx.request({
            url: app.globalData.web_path + '/wx/user/' + app.globalData.appId + '/phoneNumberInfo',
            data: {
                sessionKey: sessionKey,
                iv: e.detail.iv,
                encryptedData: e.detail.encryptedData,
            },
            header: app.globalData.header,
            success: function (res) {
                console.log(res)
                console.log(res.data.data.phoneNumber)
                that.setData({
                    sqrphone: res.data.data.phoneNumber
                })
                that.setPhone(openid, res.data.data.phoneNumber);
                wx.setStorageSync('phone', res.data.data.phoneNumber)
            },
            fail: function (res) {
            }
        })
    },
    // 社区选择
    bindPickerChange1(e) {
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.setData({
            index1: e.detail.value,
            communityUuid: this.data.communityUuidList[e.detail.value],
        })
        console.log(this.data)
    },
    // 更改定位
    changedw(e) {
        let that = this
        wx.chooseLocation({
            type: 'gcj02',
            success(res) {
                console.log(PAGENAME + '公司地址选择:'); console.log(res);
                that.setData({
                    positionData: res.address + ' ' + res.name,
                    companyAddress: res.address + ' ' + res.name,
                    longitude: res.longitude,
                    latitude: res.latitude,
                })
            }
        })
    },
    // 统一社会信用代码
    bindinputLicenseId(e) {
        this.setData({
            licenseId: e.detail.value
        })
    },
    // 招聘岗位意向去除
    closethis(e) {
        let that = this;
        let id = e.currentTarget.dataset.id
        let yxz = that.data.yxz;
        console.log(id)
        let wantjobList = that.data.wantjob;
        let tagjoblist = that.data.tagjob
        this.data.wantjob.forEach((v) => {
            if (v.id == id) {
                if (v.checked == false) {
                    yxz -= 1;
                    v.checked = true;
                } else { v.checked = false }
            }
            // wantjobList.push(v);
            // tagjoblist.push(v)
        })
        this.data.tagjob.forEach((v) => {
            if (v.id == id) {
                if (v.checked == false) {
                    v.checked = true;
                } else { v.checked = false }
            }
            // wantjobList.push(v);
            // tagjoblist.push(v)
        })
        this.setData({
            tagjob: tagjoblist,
            yxz: yxz,
            wantjob: wantjobList,
            msg: "id:" + id
        })
        console.log(PAGENAME + '意向表：'); console.log(this.data.wantjob);
    },
    //选择意向岗位
    chose(e) {

        let that = this
        let id = e.currentTarget.dataset.id
        let yxz = that.data.yxz;
        let tagjoblist = that.data.tagjob
        let wantjob = that.data.wantjob;
        if (yxz >= 10) {
            wx.showToast({
                title: '不能超过10个',
            })
        } else {
            console.log(wantjob)
            console.log(id)
            for (let i = 0; i < wantjob.length; i++) {
                if (wantjob[i].id == id) {
                    if (wantjob[i].checked == true) {
                        wantjob[i].checked = false;
                        yxz += 1;
                    } else {
                        wantjob[i].checked = true;
                    }
                }
            }

            for (let i = 0; i < tagjoblist.length; i++) {
                if (tagjoblist[i].id == id) {
                    if (tagjoblist[i].checked == true) {
                        tagjoblist[i].checked = false;
                    } else {
                        tagjoblist[i].checked = true;
                    }

                }

            }
        }

        this.setData({
            tagjob: tagjoblist,
            wantjob: wantjob,
            yxz: yxz,
            msg: "id:" + id
        })

    },
    //企业注册提交审核
    async wstijsq() {
        let that = this;
        let companyName = this.data.companyName;
        let phone = this.data.sqrphone;
        let juridicalPhone = this.data.sqrphone;
        let juridicalPerson = this.data.gslxr;
        // 企业名称检测
        if (string_util.isEmpty(companyName)) {
            wx.showModal({
                title: '提示',
                content: '必须填写企业名称',
            })
            return;
        }
        if (string_util.isEmpty(juridicalPhone)) {
            wx.showModal({
                title: '提示',
                content: '必须获取电话',
            })
            return;
        }
        if (string_util.isEmpty(juridicalPerson)) {
            wx.showModal({
                title: '提示',
                content: '必须填写联系人',
            })
            return;
        }
        // 提交开始

        try {
            Loading.begin();

            let recruitCompany = {
                companyName: this.data.companyName,
                communityUuid: this.data.communityUuid,
                address: this.data.companyAddress,
                lon: this.data.longitude,
                lat: this.data.latitude,
                licenseId: this.data.licenseId,
                recruiterOpenid: this.data.recruiterOpenid,
                phone: phone,
                juridicalPhone: juridicalPhone,
                juridicalPerson: juridicalPerson,
            }
            // 插入的同时已更新对应recruiter信息
            let insertCompanyPromise = recruitCompanyService.insertByEntity(this.data.recruiterOpenid, recruitCompany)
            let companyUuid;
            await insertCompanyPromise.then(r => {
                console.log(PAGENAME + '新增企业id: '); console.log(r);
                companyUuid = r.data;
            });

            // 意向添加到 company_for_category
            //构建list<entity>
            let categoryList = [];
            this.data.wantjob.forEach(v => {
                if (v.checked == false) {
                    categoryList.push({
                        companyUuid: companyUuid,
                        categoryUuid: v.categoryUuid,
                        categoryName: v.job,
                    })
                }
            });
            let insertListPromise = companyForCategoryService.insertByEntityList(companyUuid, categoryList);
            await insertListPromise.then(r => {
                console.log(r);
            }).catch(r => {
                console.error(r);
            })
        } catch (e) {
            console.error(e);
        } finally {
            Loading.end()
        }
        // 页面跳转
        wx.navigateTo({
            url: '/pages/fbjob/fbjob',
        })
    },
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: async function (options) {

        let that = this;
        await app.getOpenidReady();
        let openid = wx.getStorageSync('openid');
        this.setData({
            recruiterOpenid: openid
        });


        try {
            Loading.begin();

            // 获取社区列表
            // let loadCommunityListPromise = communityInformationService.loadList();
            // await loadCommunityListPromise.then(r => {
            //     let communityNameList = []; let communityUuidList = [];
            //     r.data.forEach((item) => {
            //         communityNameList.push(item.communityName);
            //         communityUuidList.push(item.id);
            //     });
            //     that.setData({
            //         array1: communityNameList,
            //         communityUuidList: communityUuidList,
            //         communityUuid: communityUuidList[0],
            //     })

            // }).catch(r => {
            //     console.error(PAGENAME + r);
            // })
            // 加载 市辖区列表
            let districtNameList = await communityInformationService.listDistrictNameByCityName(CONSTANT.CURRENT_CITY);

            districtNameList = districtNameList.data;
            let districtList = districtNameList.map(v => {
                return {
                    districtName: v,
                    checked: false,
                }
            })
            districtList = sort_util.sortChangshaDistrict(districtList);
            // 加载 市辖区列表
            this.setData({
                districtList: districtList,

            })


            let loadCategoryListPromise = jobCategoryService.loadList();
            await loadCategoryListPromise.then(r => {
                let wantjobList = [];
                let tagjobList = [];
                r.data.forEach(function (item, index) {
                    wantjobList.push({
                        job: item.categoryName,
                        id: index,
                        categoryUuid: item.id,
                        checked: true,
                    });
                    tagjobList.push({
                        job: item.categoryName,
                        id: index,
                        categoryUuid: item.id,
                        checked: false,
                    });
                });
                that.setData({
                    wantjob: wantjobList,
                    tagjob: tagjobList
                })
            }).catch(r => {
                console.error(r);
            })
            var qqmapsdk = new QQMapWX({
                key: 'Z3WBZ-TX76I-CKXGO-5GWTU-CSSK3-7LBFO' // 必填
            });

            // 获取位置信息  默认位置
            wx.getLocation({
                type: 'gcj02',
                success(res) {
                    console.log(res)
                    const latitude = res.latitude
                    const longitude = res.longitude
                    wx.request({
                        url: 'https://apis.map.qq.com/ws/geocoder/v1/?location=' + latitude + ',' + longitude + '&key=Z3WBZ-TX76I-CKXGO-5GWTU-CSSK3-7LBFO&get_poi=0',
                        method: 'GET',
                        success(res) {
                            let tempData = res.data.result;
                            that.setData({
                                positionData: tempData.address + ' ' + tempData.formatted_addresses.recommend,
                                companyAddress: tempData.address + ' ' + tempData.formatted_addresses.recommend,
                                longitude: tempData.location.lng,
                                latitude: tempData.location.lat,
                            })
                        }
                    })
                }
            });

        } catch (e) {
            console.error(e);
        } finally {
            Loading.end();
        }

    },

    /**
     * 生命周期函数--监听页面初次渲染完成
     */
    onReady: function () {

    },

    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function () {

    },

    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function () {

    },

    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function () {

    },

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh: function () {

    },

    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom: function () {

    },

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage: function () {

    }
})