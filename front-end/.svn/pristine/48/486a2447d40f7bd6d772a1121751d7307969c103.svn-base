// pages/addxq/addxq.js
const $ = require('../../utils/request_util');
const Loading = require('../../utils/loading_util');
const date_util = require('../../utils/date_util');
const url_util = require('../../utils/url_util');
const validate_util = require('../../utils/validate_util');
const { Completer } = require('../../utils/function_util');
const string_util = require('../../utils/string_util');

const CONSTANT = require('../../common/constant');
const GLOBAL_CONSTANT = require('../../common/globalConstant');
const { Salary } = require('../../common/constant');
// 加载服务

const communityInformationService = require('../../common/communityInformationService');
const communityCellService = require('../../common/communityCellService');



const app = getApp();
Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		communityList: [
			// { communityUuid:'', communityName: '' },
		],
		index: 0,
		buildingNameTypeList: [
			CONSTANT.BUILDING_NAME_TYPE.NUMBER_STYLE.name,
			CONSTANT.BUILDING_NAME_TYPE.ENGLISH_STYLE.name
		],
		index1: 0,

		communityUuid: '',
		// 存储 提交data   需注释不显示
		cellName: '',
		numBuilding: '',
		buildingNameType: '',
		numLayer: '',
		numLayerFamily: '',


	},
	// 挂载 参数状态
	state: {
		communityUuidCompleter: new Completer(),
	},
	bindinputCellName(e) {
		this.setData({ cellName: e.detail.value })
	},
	bindinputNumBuilding(e) {
		this.setData({ numBuilding: e.detail.value });
	},
	bindinputNumLayer(e) {
		this.setData({ numLayer: e.detail.value });
	},
	bindinputNumLayerFamily(e) {
		this.setData({ numLayerFamily: e.detail.value });
	},
	// 小区选择
	bindPickerChange: function (e) {
		console.log('picker发送选择改变，携带值为', e.detail.value)
		this.setData({
			index: e.detail.value,
			communityUuid: e.detail.value,

		})
	},
	// 命名格式
	bindPickerChange1: function (e) {
		console.log('picker发送选择改变，携带值为', e.detail.value)
		this.setData({
			index1: e.detail.value,
			buildingNameType: e.detail.value,
		})
	},
	// 提交事件
	async bindtapSubmit() {
		try {
			Loading.begin();
			let submitData = {
				communityUuid: this.data.communityUuid,
				cellName: this.data.cellName,
				numBuilding: this.data.numBuilding,
				buildingNameType: this.data.buildingNameType,
				numLayer: this.data.numLayer,
				numLayerFamily: this.data.numLayerFamily,
			}
			// 输入校验
			if(validate_util.numberValidate(submitData.numBuilding) 
				&& validate_util.numberValidate(submitData.numLayer)
				&& validate_util.numberValidate(submitData.numLayerFamily)
				&& !string_util.isEmpty(submitData.cellName)){
					console.log('通过');
					await communityCellService.insertByEntity(submitData)
			}else{
				Loading.end();
				wx.showModal({
					title: '输入的数据有误，请检查后重新填写',
				});
				return;
			}
		} catch (e) {
			console.error(e);
		}finally{
			Loading.end();
		}
		wx.navigateTo({
			url: '/pages/xqtjcg/xqtjcg',
		})
	},
	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		await app.getOpenidReady();
		let communityUuid = options.communityUuid
		// 测试id
		communityUuid = 'e80cf86d-a8ea-11ec-98aa-5076afbf1539';
		this.setData({
			communityUuid: communityUuid,
		});
		this.state.communityUuidCompleter.resolve(communityUuid);

	},
	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {
		try {
			Loading.begin();
			this.loadContent();
		} catch (e) {
			console.error(e);
		} finally {
			Loading.end();
		}
	},
	loadContent: async function () {
		let communityUuid = await this.state.communityUuidCompleter.promise;
		// 加载社区列表
		let communityListData = await communityInformationService.loadList();
		let communityList = communityListData.data.map((v, i) => {
			if (v.id == communityUuid) {
				this.setData({
					index: i,
				})
			}
			return {
				communityUuid: v.id,
				communityName: v.communityName,
			}
		})
		this.setData({
			communityList: communityList,
		});
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},


	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: function () {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function () {

	}
})