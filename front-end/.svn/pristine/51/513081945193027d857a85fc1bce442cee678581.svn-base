// pages/wglrxq/wglrxq.js
const $ = require('../../utils/request_util');
const Loading = require('../../utils/loading_util');
const date_util = require('../../utils/date_util');
const url_util = require('../../utils/url_util');
const validate_util = require('../../utils/validate_util');
const { Completer } = require('../../utils/function_util');
const string_util = require('../../utils/string_util');
const object_util = require('../../utils/object_util');

const CONSTANT = require('../../common/constant');
const GLOBAL_CONSTANT = require('../../common/globalConstant');
const { Salary } = require('../../common/constant');
// 加载服务

const communityInformationService = require('../../common/communityInformationService');
const communityCellService = require('../../common/communityCellService');
const userCommunityService = require('../../common/userCommunityService');
const communityCellBuildingService = require('../../common/communityCellBuildingService');
const buildingResidentService = require('../../common/buildingResidentService');

const app = getApp();
Page({

	/**
	 * 页面的初始数据
	 */
	data: {


		residentList: [
			{ layer: [{ id: '', roomNum: 1101, flagRegister: true }, { roomNum: 1102, flagRegister: false }, { roomNum: 1103, flagRegister: false }, { roomNum: 1104, flagRegister: false }, { roomNum: 1105, flagRegister: false }, { roomNum: 1106, flagRegister: false }] },
			{ layer: [{ roomNum: 1201, flagRegister: false }, { roomNum: 1202, flagRegister: false }, { roomNum: 1203, flagRegister: false }, { roomNum: 1204, flagRegister: false }, { roomNum: 1205, flagRegister: false }, { roomNum: 1206, flagRegister: true }] },
			{ layer: [{ roomNum: 1301, flagRegister: false }, { roomNum: 1302, flagRegister: false }, { roomNum: 1303, flagRegister: false }, { roomNum: 1304, flagRegister: false }, { roomNum: 1305, flagRegister: false }, { roomNum: 1306, flagRegister: false }] },
			{ layer: [{ roomNum: 1401, flagRegister: false }, { roomNum: 1402, flagRegister: false }, { roomNum: 1403, flagRegister: false }, { roomNum: 1404, flagRegister: false }, { roomNum: 1405, flagRegister: false }, { roomNum: 1406, flagRegister: false }, { roomNum: 1407, flagRegister: false },] },
		],
		communityName: '东湖社区 ',
		buildingName: '东湖新寓1栋',
		// 层数
		numLayer: 0,
		//每层户数
		numLayerFamily: 0,
		// 已登记
		numRegistered: 0,
		numRegisteredToday: 0,
		showStrBottom: '今日已录0户',// 默认
		selectedIndex: ['今日已录0户'],
		choosedRoom: '',
		zt: 0,
		yxyq: [
			{ yxmoney: '全部', id: 0 }, { yxmoney: '未登记', id: 1 }, { yxmoney: '已登记', id: 2 }
		],
		ydjsj: [
			{ yxmoney: '不限', id: 0 }, { yxmoney: '本日', id: 1 }, { yxmoney: '本月', id: 2 }
		],
		xxdj: '',
		xxydj: '',
		hidesx: true,
		qdhide: true,
		searchval: '',
		hidesqxz: true,

		sjLeftItems: [
			{ cellName: '芙蓉区', cellUuid: 0 },
			{ cellName: '天心区', cellUuid: 1 },
			{ cellName: '岳麓区', cellUuid: 2 },
			{ cellName: '开福区', cellUuid: 3 },
			{ cellName: '雨花区', cellUuid: 4 },
			{ cellName: '望城区', cellUuid: 5 },
		],
		sjRightItems: [
			{ cellName: '芙蓉区', buildingList: [{ buildingName: '街道一', buildingUuid: 0 }, { buildingName: '街道2', buildingUuid: 1 }, { buildingName: '街道1', buildingUuid: 2 }], cellUuid: 0 },
			{ cellName: '天心区', buildingList: [{ buildingName: '街道一', buildingUuid: 3 }, { buildingName: '街道2', buildingUuid: 4 }, { buildingName: '街道1', buildingUuid: 5 }], cellUuid: 1 },
			{ cellName: '岳麓区', buildingList: [{ buildingName: '街道一', buildingUuid: 6 }, { buildingName: '街道2', buildingUuid: 7 }, { buildingName: '街道1', buildingUuid: 8 }], cellUuid: 2 },
			{ cellName: '开福区', buildingList: [{ buildingName: '街道一', buildingUuid: 9 }, { buildingName: '街道2', buildingUuid: 10 }, { buildingName: '街道1', ibuildingUuidd: 11 }], cellUuid: 3 },
			{ cellName: '雨花区', buildingList: [{ buildingName: '街道一', buildingUuid: 12 }, { buildingName: '街道2', buildingUuid: 13 }, { buildingName: '街道1', buildingUuid: 14 }], cellUuid: 4 },
			{ cellName: '望城区', buildingList: [{ buildingName: '街道一', buildingUuid: 15 }, { buildingName: '街道2', buildingUuid: 16 }, { buildingName: '街道1', buildingUuid: 17 }], cellUuid: 5 },
		],
		curNav: 1,
		id: 1,
	},
	state: {
		buildingUuidCompleter: new Completer(),
	},
	//筛选
	sxbtn() {
		let hidesx = !this.data.hidesx
		this.setData({
			hidesx: hidesx
		})
	},
	// 搜索
	searchjob(e) {
		let val = e.detail.value
		let searchval = this.data.searchval
		if (val != '') {
			this.setData({
				qdhide: false,
				searchval: val
			})
		} else {
			this.setData({
				qdhide: true
			})
		}
	},
	// //确定搜索
	// qudssbtn() {
	// 	let that = this
	// 	let searchval = that.data.searchval
	// 	console.log(searchval)
	// 	let hidesx = !that.data.hidesx
	// 	that.setData({
	// 		showIndex: searchval,
	// 		hidesx: hidesx,
	// 	})
	// },
	// 收起
	sx() {
		let hidesx = !this.data.hidesx
		this.setData({
			hidesx: hidesx
		})
	},
	//信息是否登记
	yxxz(e) {
		let id = e.currentTarget.dataset.id
		this.setData({
			xxdj: id
		})
	},
	// 已登记户时间
	ydjsj(e) {
		let id = e.currentTarget.dataset.id
		this.setData({
			xxydj: id
		})
	},
	//清空
	clear() {
		this.setData({
			xxdj: 0,
			xxydj: 0
		})
	},
	//确定
	qd() {
		let hidesx = !this.data.hidesx
		this.setData({
			hidesx: hidesx
		})
	},
	bindtapUnregistered(e) {
		console.log(e);
		if (e.currentTarget.dataset.room != this.data.choosedRoom) {
			let showStrBottom = this.data.buildingName + e.currentTarget.dataset.room
			this.setData({
				choosedRoom: e.currentTarget.dataset.room,
				showStrBottom: showStrBottom,
				zt: 1
			})
		} else {
			showStrBottom = '今日已录' + this.data.numRegisteredToday + '户';
			this.setData({
				choosedRoom: '',
				showStrBottom: showStrBottom,
				zt: 0
			})
		}
	},
	// 已登记点击
	bindtapRegistered(e) {
		console.log(e);
		let residentUuid = e.currentTarget.dataset.id;
		let tipInfo = this.data.buildingName + e.currentTarget.dataset.room;
		wx.showModal({
			title: '提示',
			content: tipInfo + '已登记信息 是否修改信息？',
			confirmText: '去修改',
			success(res) {
				if (res.confirm) {
					wx.navigateTo({
						url: '/pages/xiugaijz/xiugaijz?residentUuid=' + residentUuid,
					})
				} else if (res.cancel) {
					console.log('用户点击取消')
				}
			}
		})
	},
	//登记事件
	godj() {
		wx.navigateTo({
			url: '/pages/sqmdb/sqmdb',
		})
	},

	//社区选择
	sqchoose() {
		let hidesqxz = !this.data.hidesqxz
		this.setData({
			hidesqxz: hidesqxz
		})
	},
	// 社区选择--左边小区选择
	switchRightTab1: function (e) {
		// 获取item项的id，和数组的下标值
		let id = e.target.dataset.id;
		console.log(e)
		let index = parseInt(e.target.dataset.index1);
		// 把点击到的某一项，设为当前index
		this.setData({
			curNav1: id,
			curIndex1: index,
			toView1: id
		})
	},
	// 社区选择--右边栋数
	choselocal(e) {
		let hidesqxz = !this.data.hidesqxz
		console.log(e)
		this.setData({
			hidesqxz: hidesqxz,
			curentid: e.currentTarget.dataset.id,
		})
	},
	//社区选择点击遮罩层关闭
	hidethis() {
		let hidesqxz = !this.data.hidesqxz
		this.setData({
			hidesqxz: hidesqxz
		})
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		await app.getOpenidReady();
		// 传入建筑id
		let buildingUuid = options.buildingUuid;
		// 测试
		buildingUuid = '077f982c-2cc1-4f00-9c97-78df29ff5958';
		this.state.buildingUuidCompleter.resolve(buildingUuid);

		let that = this
		let gradeOne_new = []
		for (let i = 0; i < that.data.residentList.length; i++) {
			let lgh = that.data.residentList[i].layer.length
			gradeOne_new.push(lgh)
		}
		console.log(Math.max(...gradeOne_new))
		//最大值
		let max = Math.max(...gradeOne_new)
		that.setData({
			wd: max * 57
		})

		wx.getSystemInfo({
			success: (res) => {
				console.log(res)
				let windowHeight = res.windowHeight;
				let wht = windowHeight * 0.8 - 86
				let oht = wht;
				that.setData({
					oht: oht
				})
			},
		});
	},
	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {
		try {
			Loading.begin();
			await this.loadContent();
		} catch (e) {
			console.error(e);
		} finally {
			Loading.end();
		}
	},
	async loadContent() {
		let buildingUuid = await this.state.buildingUuidCompleter.promise;

		// 加载 building  楼栋信息
		let buildingData = await communityCellBuildingService.loadEntityById(buildingUuid)
		buildingData = buildingData.data;
		let numLayer = buildingData.numLayer;
		let numLayerFamily = buildingData.numLayerFamily;
		console.log(buildingData);

		// 根据 building - cellUuid 加载小区信息
		let cellData = await communityCellService.loadEntityById(buildingData.cellUuid);
		cellData = cellData.data;
		let buildingName = cellData.cellName.concat(" ", buildingData.buildingName);

		// 根据 cell - communityUuid加载社区信息
		let communityData = await communityInformationService.loadEntityById(cellData.communityUuid);
		communityData = communityData.data;
		let communityName = communityData.communityName;

		this.setData({
			// 层数 户数
			numLayer: numLayer,
			numLayerFamily: numLayerFamily,
			// 设置小区名字 楼栋名字
			communityName: communityName,
			buildingName: buildingName,
		})

		console.log(cellData);
		// 根据 communityUuid 加载小区 列表
		let communityCellList = await communityCellService.listByCommunityUuid(communityData.id);
		communityCellList = communityCellList.data;
		// 根据 communityUuid 加载building列表
		let communityCellBuildingList = await communityCellBuildingService.listByCommunityUuid(communityData.id);
		communityCellBuildingList = communityCellBuildingList.data;
		// 构建上侧选择栏
		let sjLeftItemsList = communityCellList.map(v => {
			return {
				cellName: v.cellName,
				cellUuid: id,
			}
		});
		let sjRightItemsList = object_util.copyObject(sjLeftItemsList.map(v => {
			v.buildingList = [];
			return v;
		}));
		
		// communityCellBuildingList.forEach(v =>{
		// 	sjRightItemsList = sjRightItemsList.map(r =>{
				
		// 	})
		// })
		// sjLeftItems: [
		// 	{ cellName: '芙蓉区', cellUuid: 0 },
		// 	{ cellName: '天心区', cellUuid: 1 },
		// 	{ cellName: '岳麓区', cellUuid: 2 },
		// 	{ cellName: '开福区', cellUuid: 3 },
		// 	{ cellName: '雨花区', cellUuid: 4 },
		// 	{ cellName: '望城区', cellUuid: 5 },
		// ],
		// sjRightItems: [
		// 	{ cellName: '芙蓉区', buildingList: [{ buildingName: '街道一', buildingUuid: 0 }, { buildingName: '街道2', buildingUuid: 1 }, { buildingName: '街道1', buildingUuid: 2 }], cellUuid: 0 },
		// 	{ cellName: '天心区', buildingList: [{ buildingName: '街道一', buildingUuid: 3 }, { buildingName: '街道2', buildingUuid: 4 }, { buildingName: '街道1', buildingUuid: 5 }], cellUuid: 1 },

		// 根据 buildingUuid 加载居民信息
		let buildingResidentListData = await buildingResidentService.loadListByBuildingUuid(buildingUuid);
		buildingResidentList = buildingResidentListData.data;
		// 构建residentList
		let residentList = [];
		for (let i = 1; i <= numLayer; i++) {
			let currentLayerList = buildingResidentList.filter(v => {
				return v.whichLayer == i;
			});
			currentLayerList.sort((a, b) => { return a.whichLayerFamily - b.whichLayerFamily })
			// 截取构建数据
			currentLayerList = currentLayerList.map(v => {
				// 构建房间号
				let tempWhichLayer = v.whichLayer + "";
				tempWhichLayer = (tempWhichLayer.length == 1) ? "0" + tempWhichLayer : tempWhichLayer;
				let tempWhichLayerFamily = v.whichLayerFamily + "";
				tempWhichLayerFamily = (tempWhichLayerFamily.length == 1) ? "0" + tempWhichLayerFamily : tempWhichLayerFamily;
				return {
					id: v.id,
					roomNum: tempWhichLayer + tempWhichLayerFamily,
					whichLayer: v.whichLayer,
					whichLayerFamily: v.whichLayerFamily,
					flagRegister: (v.flagRegister == 0) ? false : true,
					registerTime: v.registerTime,
				}
			})
			// 排序
			residentList.push({ layer: currentLayerList });
		}
		// 获取今日登记用户
		let numRegisteredToday = 0;
		residentList.forEach(v => {
			v.layer.forEach(r => {
				if (r.flagRegister && date_util.isToday(r.registerTime)) {
					numRegisteredToday++;
				}
			})
		})
		this.setData({
			numRegisteredToday: numRegisteredToday,
			showStrBottom: '今日已录' + numRegisteredToday + '户',
			residentList: residentList,
		})
		console.log(residentList);
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},



	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: function () {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function () {

	}
})