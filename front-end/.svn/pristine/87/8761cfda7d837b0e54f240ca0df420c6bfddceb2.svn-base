// pages/qyzc/qyzc.js
var QQMapWX = require('../../mapjs/qqmap-wx-jssdk.js');
// 加载工具类
const CONSTANT = require('../../common/constant');
const Loading = require('../../utils/loading_util');
const object_util = require('../../utils/object_util');
const string_util = require('../../utils/string_util');
const sort_util = require('../../utils/sort_util');

// 加载服务
const jobCategoryService = require('../../common/jobCategoryService');
const companyForCategoryService = require('../../common/companyForCategoryService');
const recruitCompanyService = require('../../common/recruitCompanyService');
const communityInformationService = require('../../common/communityInformationService');


// 常量定义
const app = getApp();
const MAX_CHOOSE_CATEGORY_NUM = 5;
const PAGENAME = 'qyzc.js - ';
Page({

    /**
     * 页面的初始数据
     */
    data: {
        // 招聘人
        recruiterTelephone: '',
        recruiterOpenid: '',
        // 企业名称
        companyUuid: '',
        companyName: '',
        companyAddress: '',
        longitude: 0.0,
        latitude: 0.0,
        // 分类选择
        array: ['IT', '文化传媒', '电子制造'], // categoryName
        categoryUuid_list: [],
        categoryUuid: '',
        index: 0,
        // 社区选择
        array1: ['社区1', '街道1', '街道2'], // communityName
        communityUuidList: [],
        communityUuid: '',
        index1: 0,
        positionData: '',
        yxz: 0,
        licenseId: '',
        wantjob: [
            // { job: 'IT', id: 0 }, { job: '文化传媒', id: 1 }, { job: '电子制造', id: 2 }, { job: '电子制造', id: 3 }, { job: '电子制造', id: 4 }
        ],
        datdid: '',
        companyPerson: '',
        recruiterName: '',
        recruiterTelephone: '',

        companyPerson: '',
        companyPhone: '',

        districtList: [
            // { districtName: '芙蓉区', checked: false },
        ],
        streetList: [
            // { streetName: '望岳街道', checked: false },
        ],
        communityList: [
            // { communityName: '社区er', typeid: 1 },
            // { communityName: '社区3', typeid: 2 },
            // { communityName: '社区一', typeid: 3 },
        ],
        // 已选社区
        hiddenPopupExpectCommunity: true,
        hiddenCommunityDefaultText: false,
        // choosedCommunityList: [],
        choosedCommunityListCopy: [],
        choosedCommunityUuid: '',

        choosedCommunityList: [],
        choosedCommunityName: '请选择社区',

        choosedDistrictName: '',

        oht: '',

        searchJobText: '',
        txthide: false,
        arrhide: true,
        hiddenPopupExpectCategory: true,
        wantjob: [],
        wantjobCopy: [],
        csjobCopy: [],
        csjob: [
            // { job: 'IT', id: 0, checked: false, display: 'none' },
        ],
    },
    /********** 页面输入事件 BEGIN **********/
    // 企业名字
    bindinputCompanyName(e) {
        this.setData({
            companyName: e.detail.value
        })
    },
    // 公司联系人姓名
    bindInputCompanyPerson(e) {
        this.setData({
            companyPerson: e.detail.value
        })
    },
    bindinputCompanyPhone(e) {
        this.setData({
            companyPhone: e.detail.value
        })
    },
    // 招聘人姓名
    bindtapRecruiterName(e) {
        this.setData({
            juridicalPerson: e.detail.value,
            recruiterName: e.detail.value,
        })
    },
    // 招聘人联系电话
    bindgetphonenumberRecruiter(e) {
        let that = this
        var sessionKey = wx.getStorageSync('sessionKey')
        wx.request({
            url: app.globalData.web_path + '/wx/user/' + app.globalData.appId + '/phoneNumberInfo',
            data: {
                sessionKey: sessionKey,
                iv: e.detail.iv,
                encryptedData: e.detail.encryptedData,
            },
            header: app.globalData.header,
            success: function (res) {
                that.setData({
                    recruiterTelephone: res.data.data.phoneNumber
                })
                wx.setStorageSync('phone', res.data.data.phoneNumber)
            },
            fail: function (res) {
            }
        })
    },
    // 更改定位
    bindtapChangeLocation(e) {
        let that = this
        wx.chooseLocation({
            type: 'gcj02',
            success(res) {
                console.log(PAGENAME + '公司地址选择:'); console.log(res);
                that.setData({
                    positionData: res.address + ' ' + res.name,
                    companyAddress: res.address + ' ' + res.name,
                    longitude: res.longitude,
                    latitude: res.latitude,
                })
            }
        })
    },
    // 统一社会信用代码
    bindinputLicenseId(e) {
        this.setData({
            licenseId: e.detail.value
        })
    },
    /********** 页面输入事件 END **********/



    /********** 招聘岗位意向 BEGIN **********/
    // 弹窗呼出  岗位意向
    bindtapPopupExpectCategory() {
        let currentCsjob = this.data.wantjob.filter(v => { return v.checked });

        this.setData({
            hiddenPopupExpectCategory: false,
            wantjobCopy: object_util.copyObject(this.data.wantjob),
            csjob: object_util.copyObject(currentCsjob),
            csjobCopy: object_util.copyObject(currentCsjob),
        })
    },
    // 招聘岗位意向去除
    catchtapCancelCategoryIcon(e) {
        let that = this;
        let currentCategoryUuid = e.currentTarget.dataset.id
        console.log(currentCategoryUuid)
        let wantjobList = that.data.wantjob;
        let csjobList = that.data.csjob;
        wantjobList = wantjobList.map(v => {
            if (v.categoryUuid == currentCategoryUuid) {
                v.checked = false;
                v.display = 'none';
            }
            return v;
        })
        console.log(wantjobList);
        csjobList = csjobList.filter(v => {
            return v.categoryUuid != currentCategoryUuid;
        })
        this.setData({
            wantjob: wantjobList,
            csjob: csjobList,
        })
        let isHideTxt = (wantjobList.findIndex(v => { return v.checked }) == -1) ? false : true;
        console.log(isHideTxt);
        this.setData({
            txthide: isHideTxt,
            arrhide: !isHideTxt,
        })

    },

    // 选择职位 到已选择
    bindtapChooseCategory(e) {
        let currentId = e.currentTarget.dataset.id;
        let wantjobList = this.data.wantjob;
        let csjobList = this.data.csjob;

        if (csjobList.length >= MAX_CHOOSE_CATEGORY_NUM) {
            wx.showModal({
                title: '提示',
                content: '最多选择5个职业类别',
            })
            return;
        }
        // 更新待选择职位列表
        wantjobList = wantjobList.map(v => {
            if (v.id == currentId) {
                v.checked = true;
                v.display = 'none';
            }
            return v;
        });

        // 更新已选择职位列表
        let currentObj = object_util.copyObject(
            wantjobList.find(v => {
                return v.id == currentId;
            })
        );
        currentObj.display = 'block';
        csjobList.push(currentObj);
        this.setData({
            wantjob: wantjobList,
            csjob: csjobList,
        })
        console.log(this.data);
    },

    // 移除已选择职位 到待选择职位列表
    bindtapRemoveCategory(e) {
        let currentId = e.currentTarget.dataset.id;
        let wantjobList = this.data.wantjob;
        let csjobList = this.data.csjob;
        // 更新已选择职位列表
        let currentIndex = csjobList.findIndex(v => {
            return v.id == currentId;
        });
        csjobList.splice(currentIndex, 1);
        // 更新待选择职位列表
        wantjobList = wantjobList.map(v => {
            if (v.id == currentId) {
                v.checked = false;
                v.display = 'block';
            }
            return v;
        })
        this.setData({
            wantjob: wantjobList,
            csjob: csjobList,
        })
    },
    //输入职位
    bindinputJob(e) {
        console.log(e.detail.value);

        let searchText = e.detail.value;
        this.setData({
            searchJobText: searchText,
        })
        let wantjobCopyTemp = object_util.copyObject(this.data.wantjobCopy);
        wantjobCopyTemp = wantjobCopyTemp.map(v => {
            if (this.data.csjob.findIndex(r => {
                return r.categoryUuid == v.categoryUuid;
            }) != -1) {
                v.checked = true;
                v.display = 'none';
            };
            return v;
        })
        if (string_util.isEmpty(searchText)) {
            this.setData({
                wantjob: wantjobCopyTemp,
            })
        } else {
            // 遍历查找是否包含字符串
            let wantjobList = wantjobCopyTemp.map(v => {
                if (v.job.toLowerCase().indexOf(searchText.toLowerCase()) == -1) {
                    v.display = "none";
                }
                return v;
            });
            this.setData({
                wantjob: wantjobList,
            })
        }
    },
    // 职位搜索框  回车按键
    async bindconfirmSeachCategory(e) {
        let searchText = e.detail.value;
        this.setData({
            searchJobText: searchText,
        })
        let wantjobList = this.data.wantjob;

        let wantjobCopyTemp = object_util.copyObject(this.data.wantjobCopy);
        wantjobCopyTemp = wantjobCopyTemp.map(v => {
            if (this.data.csjob.findIndex(r => {
                return r.categoryUuid == v.categoryUuid;
            }) != -1) {
                v.checked = true;
                v.display = 'none';
            };
            return v;
        })
        // 如果字符串为空不作处理
        if (string_util.isEmpty(searchText)) {
            this.setData({
                wantjob: wantjobCopyTemp,
            })
            return;
        }
        // 查找是否存在
        if (wantjobList.findIndex(r => {
            return r.job.indexOf(searchText) != -1;
        }) != -1) {
            let wantjobList = wantjobCopyTemp.map(v => {
                if (v.job.indexOf(searchText) == -1) {
                    v.display = "none";
                }
                return v;
            });
            this.setData({
                wantjob: wantjobList,
            })
        } else {
            insertData = {
                categoryName: searchText,
            }
            // 不存在就插入  
            let categoryUuidData = await jobCategoryService.insertByEntity(insertData);
            let categoryUuid = categoryUuidData.data;
            let newWantJobData = {
                id: categoryUuid,
                job: searchText,
                checked: false,
                display: 'block',
            }
            wantjobList.push(newWantJobData);
            this.data.wantjobCopy.push(newWantJobData);
            this.setData({
                wantjob: wantjobList,
                wantjobCopy: object_util.copyObject(this.data.wantjobCopy),
            })
        }
    },
    // 取消弹窗 职位意向选择
    bindtapCategoryCancel() {
        // 副本还原
        let currentWantjobCopy = this.data.wantjobCopy;
        let currentCsjobCopy = this.data.csjobCopy;
        this.setData({
            searchJobText: '',
            hiddenPopupExpectCategory: true,
            wantjob: currentWantjobCopy,
            csjob: currentCsjobCopy,
        })
    },
    // 保存 -- 职位意向选择 
    bindtapCategorySave() {
        let wantjobListCopy = this.data.wantjobCopy;
        let csjobList = this.data.csjob;
        console.log(wantjobListCopy);
        console.log(csjobList);
        wantjobListCopy = wantjobListCopy.map(v => {
            if (csjobList.findIndex(r => {
                return v.categoryUuid == r.categoryUuid;
            }) == -1) {
                v.display = 'block';
                v.checked = false;
            } else {
                v.display = 'none';
                v.checked = true;
            }
            return v;
        })

        let arrhide; let txthide;
        if (wantjobListCopy.findIndex(r => {
            return r.checked == true;
        }) == -1) {
            txthide = false;
            arrhide = true;
        } else {
            txthide = true;
            arrhide = false;
        }
        this.setData({
            searchJobText: '',
            wantjob: object_util.copyObject(wantjobListCopy),
            hiddenPopupExpectCategory: true,
            txthide: txthide,
            arrhide: arrhide
        });
    },
    /********** 招聘岗位意向 END **********/

    /** BEGIN 组件事件 - 选择社区*/
    bindtapChooseCommunity(e) {
        this.chooseCommunityComponent.showPopup();
    },
    submitChooseCommunity(e) {
        let currentChoosedCommunityList = e.detail.value;
        console.log(e);
        this.setData({
            choosedCommunityList: currentChoosedCommunityList,
            choosedCommunityName: currentChoosedCommunityList.length == 0 ? '' : currentChoosedCommunityList[0].communityName,
            hiddenCommunityDefaultText: currentChoosedCommunityList.length == 0 ? false : true,
        })
    },
    /** END 组件事件 - 选择社区*/

    /********** 企业注册提交审核 **********/
    //企业注册提交审核
    async bindtapSubmit() {
        let companyName = this.data.companyName;
        let juridicalPhone = this.data.recruiterTelephone;
        let juridicalPerson = this.data.juridicalPerson;
        // 企业名称检测
        if (this.data.choosedCommunityList.length == 0) {
            wx.showModal({
                title: '提示',
                content: '必须选择所属社区',
            })
            return;
        }
        if (string_util.isEmpty(companyName)) {
            wx.showModal({
                title: '提示',
                content: '必须填写企业名称',
            })
            return;
        }
        if (string_util.isEmpty(juridicalPhone)) {
            wx.showModal({
                title: '提示',
                content: '请获取当前招聘人联系电话',
            })
            return;
        }
        if (string_util.isEmpty(juridicalPerson)) {
            wx.showModal({
                title: '提示',
                content: '请填写招聘联系人',
            })
            return;
        }
        // 提交开始

        try {
            Loading.begin();

            let recruitCompany = {
                companyName: companyName,
                communityUuid: this.data.choosedCommunityList.length == 0 ? '' : this.data.choosedCommunityList[0].communityUuid,
                address: this.data.companyAddress,
                lon: this.data.longitude,
                lat: this.data.latitude,
                licenseId: this.data.licenseId,
                recruiterOpenid: this.data.recruiterOpenid,
                companyPerson: this.data.companyPerson,
                phone: this.data.companyPhone,
                juridicalPhone: juridicalPhone,
                juridicalPerson: juridicalPerson,
            }
            // 插入的同时已更新对应recruiter信息
            let companyUuid = await recruitCompanyService.insertByEntity(this.data.recruiterOpenid, recruitCompany)
            companyUuid = companyUuid.data;
            // 意向添加到 company_for_category
            if (this.data.wantjob.findIndex(v => { return v.checked }) != -1) {
                let categoryList = [];
                this.data.wantjob.forEach(v => {
                    if (v.checked == false) {
                        categoryList.push({
                            companyUuid: companyUuid,
                            categoryUuid: v.categoryUuid,
                            categoryName: v.job,
                        })
                    }
                });
                await companyForCategoryService.insertByEntityList(companyUuid, categoryList);
            }

        } catch (e) {
            console.error(e);
        } finally {
            Loading.end()
        }
        // 页面跳转
        wx.redirectTo({
            url: '/pages/fbjob/fbjob',
        })
    },
    /**
     * 生命周期函数--监听页面加载
     */
    onLoad: async function (options) {

        let that = this;
        wx.getSystemInfo({
            success: (res) => {
                console.log(res)
                let windowHeight = res.windowHeight;
                let wht = windowHeight * 0.8 - 86
                let oht = wht;
                that.setData({
                    oht: oht
                })
            },
        });
        await app.getOpenidReady();
        let openid = wx.getStorageSync('openid');
        this.setData({
            recruiterOpenid: openid
        });

        try {
            Loading.begin();
            // 加载 工作意向
            let loadCategoryListPromise = jobCategoryService.loadList();
            await loadCategoryListPromise.then(r => {
                let wantjobList = [];
                r.data.forEach((item, index) => {
                    wantjobList.push({
                        job: item.categoryName,
                        id: index,
                        categoryUuid: item.id,
                        display: 'block',
                        checked: false,
                    });
                });
                that.setData({
                    wantjob: wantjobList,
                })
            }).catch(r => {
                console.error(r);
            })
            // 加载社区组件


            var qqmapsdk = new QQMapWX({
                key: 'Z3WBZ-TX76I-CKXGO-5GWTU-CSSK3-7LBFO' // 必填
            });

            // 获取位置信息  默认位置
            wx.getLocation({
                type: 'gcj02',
                success(res) {
                    console.log(res)
                    const latitude = res.latitude
                    const longitude = res.longitude
                    wx.request({
                        url: 'https://apis.map.qq.com/ws/geocoder/v1/?location=' + latitude + ',' + longitude + '&key=Z3WBZ-TX76I-CKXGO-5GWTU-CSSK3-7LBFO&get_poi=0',
                        method: 'GET',
                        success(res) {
                            let tempData = res.data.result;
                            that.setData({
                                positionData: tempData.address + ' ' + tempData.formatted_addresses.recommend,
                                companyAddress: tempData.address + ' ' + tempData.formatted_addresses.recommend,
                                longitude: tempData.location.lng,
                                latitude: tempData.location.lat,
                            })
                        }
                    })
                }
            });

        } catch (e) {
            console.error(e);
        } finally {
            Loading.end();
        }
    },

    /**
     * 组件应都写在onready 页面渲染交互完成
     */
    onReady: function () {
        this.chooseCommunityComponent = this.selectComponent("#choose-community");
    },

    /**
     * 生命周期函数--监听页面显示
     */
    onShow: function () {

    },

    /**
     * 生命周期函数--监听页面隐藏
     */
    onHide: function () {

    },

    /**
     * 生命周期函数--监听页面卸载
     */
    onUnload: function () {

    },

    /**
     * 页面相关事件处理函数--监听用户下拉动作
     */
    onPullDownRefresh: function () {

    },

    /**
     * 页面上拉触底事件的处理函数
     */
    onReachBottom: function () {

    },

    /**
     * 用户点击右上角分享
     */
    onShareAppMessage: function () {

    }
})